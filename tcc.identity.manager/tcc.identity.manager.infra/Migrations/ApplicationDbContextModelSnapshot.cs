// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using tcc.identity.manager.infra.Context;

namespace tcc.identity.manager.infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("tcc.identity.manager.domain.AuthorizationAggregate.Authorization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValue(new Guid("bd954012-6855-4c41-ab77-bdf7ad052e55"));

                    b.Property<Guid?>("UserIdentityId")
                        .HasColumnType("uuid");

                    b.Property<string>("_profile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserIdentityId");

                    b.ToTable("Authorization");
                });

            modelBuilder.Entity("tcc.identity.manager.domain.AuthorizationAggregate.UserIdentity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValue(new Guid("c0c285de-86cd-4838-80d6-77900690d726"));

                    b.Property<string>("_email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("_password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("tcc.identity.manager.domain.AuthorizationAggregate.Authorization", b =>
                {
                    b.HasOne("tcc.identity.manager.domain.AuthorizationAggregate.UserIdentity", "UserIdentity")
                        .WithMany()
                        .HasForeignKey("UserIdentityId");
                });
#pragma warning restore 612, 618
        }
    }
}
